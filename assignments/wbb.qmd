```{r}
library(tidyverse)
library(cluster)
library(ggbeeswarm)
library(ggrepel)

set.seed(1234)
```

```{r}
players <- read_csv("https://dwillis.github.io/sports-data-files/players20.csv")
```

```{r}
playersselected <- players |>
  filter(MP>0) |> filter(Pos == "F") |>
  select(Player, Team, Pos, MP, `FG%`, TRB, BLK, TOV, PTS) |>
  na.omit()
```

```{r}
playersscaled <- playersselected |>
  select(MP, `FG%`, TRB, BLK, TOV, PTS) |>
  mutate_all(scale) |>
  na.omit()
```

```{r}
# function to compute total within-cluster sum of square
wss <- function(k) {
  kmeans(playersscaled, k, nstart = 10 )$tot.withinss
}

# Compute and plot wss for k = 1 to k = 15
k.values <- 1:15

# extract wss for 2-15 clusters
wss_values <- map_dbl(k.values, wss)

plot(k.values, wss_values,
       type="b", pch = 19, frame = FALSE,
       xlab="Number of clusters K",
       ylab="Total within-clusters sum of squares")
```

```{r}
k8 <- kmeans(playersscaled, centers = 8, nstart = 25)

k8
```

```{r}
playercluster <- data.frame(playersselected, k8$cluster)
```

```{r}
cm <- playercluster |> filter(Player == "Jalen Smith")

cm
```

```{r}
ggplot() +
  geom_point(data=playercluster, aes(x=MP, y=TRB, color=k8.cluster)) +
  geom_point(data=cm, aes(x=MP, y=TRB), color="red")
```

```{r}
big10 <- c("Nebraska Cornhuskers", "Iowa Hawkeyes", "Minnesota Golden Gophers", "Illinois Fighting Illini", "Northwestern Wildcats", "Wisconsin Badgers", "Indiana Hoosiers", "Purdue Boilermakers", "Ohio State Buckeyes", "Michigan Wolverines", "Michigan State Spartans", "Penn State Nittany Lions", "Rutgers Scarlet Knights", "Maryland Terrapins")

playercluster |> filter(k8.cluster == 2) |> filter(Team %in% big10) |> arrange(desc(MP))
```

```{r}
set.seed(1234)

simulations <- rbinom(n = 1000, size = 20, prob = .317)

table(simulations)
```

```{r}
set.seed(1234)

simulations <- rbinom(n = 1000, size = 15, prob = .326)

hist(simulations)
```

```{r}
table(simulations)
```
```{r}
set.seed(1234)

simulations <- rbinom(n = 1000, size = 1, prob = .377)

four_in_a_row <- mean(simulations == 1 & lead(simulations, 1) == 1 & lead(simulations, 2) == 1 & lead(simulations, 3) == 1)

odds <- 1/four_in_a_row
```

```{r}
players <- read_csv("https://thescoop.org/sports-data-files/wbb_players_2023.csv")
```

```{r}
activeplayers <- players |> filter(mp>0) 

activeplayers <- activeplayers |> mutate(tspct=pts/(2*(fga+0.44*fta)))

summary(activeplayers$fga)
```
```{r}
shooters <- activeplayers |> filter(fga > 182)

ggplot() + geom_beeswarm(data=shooters, aes(x=position, y=tspct), color="grey")
```
```{r}
umd <- activeplayers |> 
  filter(team == "Maryland") |> 
  filter(fga>182) |> 
  arrange(desc(tspct))

ggplot() + 
  geom_beeswarm(
    data=shooters, 
    groupOnX=TRUE, 
    aes(x=position, y=tspct), color="grey") + 
  geom_beeswarm(
    data=umd, 
    groupOnX=TRUE, 
    aes(x=position, y=tspct), color="red")
```
```{r}
ggplot() + 
  geom_beeswarm(
    data=shooters, 
    groupOnX=TRUE, 
    aes(x=position, y=tspct), color="grey") + 
  geom_beeswarm(
    data=umd, 
    groupOnX=TRUE, 
    aes(x=position, y=tspct), color="red") +
  geom_text_repel(
    data=umd, 
    aes(x=position, y=tspct, label=player))
```
```{r}
ggplot() + 
  geom_quasirandom(
    data=shooters, 
    groupOnX=TRUE, 
    aes(x=position, y=tspct), color="grey") + 
  geom_quasirandom(
    data=umd, 
    groupOnX=TRUE, 
    aes(x=position, y=tspct), color="red") +
  geom_text_repel(
    data=umd, 
    aes(x=position, y=tspct, label=player))
```

```{r}
ggplot() + 
  geom_jitter(
    data=shooters, 
    aes(x=position, y=tspct), color="grey") + 
  geom_jitter(
    data=umd, 
    aes(x=position, y=tspct), color="red") +
  geom_text_repel(
    data=umd, 
    aes(x=position, y=tspct, label=player))
```

