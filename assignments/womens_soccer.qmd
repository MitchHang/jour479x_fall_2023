---
title: "Women's Soccer Data"
author: "Mitchell Hang"
date: "2023-09-02"
output: html_notebook
---

We'll use this notebook to explore some NCAA women's soccer data and [our questions](https://docs.google.com/spreadsheets/d/1kTSrnl1URmcexIWLDMWqDnp3q-c2OS45uifnhjp10n4/edit#gid=0). First, let's load the tidyverse library:

```{r}
library(tidyverse)
```

We'll want to start with 2023 match data, which is located in [this GitHub repository](https://github.com/dwillis/NCAAWomensSoccerData). We can load the match data directly from GitHub using `read_csv`:


```{r}
matches_2023 <- read_csv("https://raw.githubusercontent.com/dwillis/NCAAWomensSoccerData/main/data/ncaa_womens_soccer_matchstats_2023.csv")
```

Let's take a look at this data to see what it contains, using `head` and `glimpse`:

```{r}
head(matches_2023)
glimpse(matches_2023)
```

Now, onto the questions using aggregates, which means `group_by` and `summarize`:

1. How many shots in total has Maryland attempted and how many have been on goal? Calculate a percentage of shots on goal.
**ANSWER:** So far (after five games), Maryland attempted 56 shots with 30 of them being on goal. Therefore, 53.571% of Maryland's shots have been on goal.

```{r}
matches_2023 |>
  group_by(team) |>
  summarise(
    so_g = sum(so_g),
    sh_att = sum(sh_att),
    percentage = so_g/sh_att*100
  ) |> 
  arrange(team)
```

2. What about the same shot stats from last season's first four games? You'll need to load the matches from 2022 - just change the season in the URL - and filter by date to find the first four games.
**ANSWER:** For the first four games of the 2022 season, Maryland attempted 48 shots with 23 of them being on goal. Therefore, 47.917% of Maryland's shots have been on goal.

```{r}
matches_2022 <- read_csv("https://raw.githubusercontent.com/dwillis/NCAAWomensSoccerData/main/data/ncaa_womens_soccer_matchstats_2022.csv")

matches_2022 |>
  filter(between(date, as.Date('2022-08-18'), as.Date('2022-09-01'))) |>
  group_by(team) |>
  summarise(
    so_g = sum(so_g),
    sh_att = sum(sh_att),
    percentage = so_g/sh_att*100
  ) |> 
  arrange(team)
```


3. What about draws - Maryland started 2022 with 4 ties. Have any other teams had as many this season?
**ANSWER:** Two other teams have had four ties after the start of the 2023 season: Denver Pioneers and Indiana St. Sycamores. Similarly, Maryland itself also had four ties after the start of the 2023 season. 

```{r}
matches_2023 |>
  filter(str_detect(outcome, "Draw")) |>
  group_by(team) |>
  summarise(
    draws = n()
  ) |> 
  arrange(desc(draws))
```


4. How many total corner kicks has Maryland had so far and how many have its opponents have? Calculate the difference between the two totals for every team.
**ANSWER:** So far, Maryland has had 13 corner kicks. The team with the largest difference from Maryland is the Pittsburgh Panthers, as they have 54 corner kicks with a difference of 41.

```{r}
matches_2023 |>
  group_by(team) |>
  summarise(
    corners = sum(corners),
    difference = abs(corners-13),
  ) |> 
  arrange(desc(difference))
```

## Significance Tests

HYPOTHESIS: There is more scoring in women's soccer this season than last season.

Add a column to both dataframes that contains the total_ _goals for each match. To do this, we'll use mutate and we will save the results back to the same dataframe.

```{r}
matches_2022 <- matches_2022 |> mutate(total_goals = goals + defensive_goals)

matches_2023 <- matches_2023 |> mutate(total_goals = goals + defensive_goals)

```

```{r}
t.test(matches_2022$total_goals, matches_2023$total_goals)
```

There is a very statistically significant difference between the total goals in 2023 compared to the total goals in 2022. However, I think this is likely because the 2023 season is still ongoing, and the total number of goals in the 2022 season has already been finalized, so I think it would be better if we compare the two seasons by their number of goals up to a certain date or number of games.

```{r}
matches_2022_early <- matches_2022 |> filter(date < '2022-09-14')
```

```{r}
t.test(matches_2022_early$total_goals, matches_2023$total_goals)
```

There is some statistically significant difference between the total goals in 2023 compared to the total goals in the early matches of 2022. Based on this modified t-test, it's more fair to compare the total number of goals for a team between two seasons if we limit ourselves to the first few games by a certain date. That way, it gives us a better suggestion if one season had more total goals than the other.